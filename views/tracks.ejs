<!DOCTYPE html>
<html>
<!-- prevents favicon request -->
<link rel="icon" href="data:,">
<link rel="stylesheet" href="/stylesheets/style.css" type="text/css">
<link rel="stylesheet" href="/stylesheets/tracks.css" type="text/css">
<head>
  <title>Tracks</title>
</head>
<body>
  <%- include('./partials/nav'); %>
  <div>
    <table id="track-table">
      <!-- <tr class="track-container">
        <th>Title</th>
        <th>Artist</th>
        <th>Album</th>
        <th>Duration</th>
      </tr> -->
      <tbody id="track-table-body">
        <% items.forEach((item) => { %>
          <tr
          class="track-item"
          data-track-title="<%= item.track.name %>"
          data-track-artists="<%= item.track.artistNames %>"
          data-track-album="<%= item.track.album.name %>"
          >
          <!-- onclick="searchDiscogs(this)" -->
          <td class="track-name"><%= item.track.name %></td>
          <td class="track-artist"><%= item.track.artistNames %></td>
          <td class="track-album"><%= item.track.album.name %></td>
          <td class="track-duration"><%= item.track.duration_ms %></td>
        </tr>
        <% }); %>
      </tbody>
    </table>
  </div>
  <!-- <script type="text/javascript">
    const searchContainer = document.getElementById('search-container');

    function searchDiscogs(trackElement) {
      const title = trackElement.dataset.trackTitle
      const artistNames = trackElement.dataset.trackArtists
      const album = trackElement.dataset.trackAlbum

      searchContainer.replaceChildren();

      const xmlGetRequest = new XMLHttpRequest();
      const url = `${window.location.origin}/search?artist=${artistNames}&title=${title}&album=${album}`;
      const params = {
        title: encodeURIComponent(title),
        artist: encodeURIComponent(artistNames),
        album: encodeURIComponent(album)
      };
      xmlGetRequest.open("GET", url, true);

      xmlGetRequest.onreadystatechange = function () {
        if (xmlGetRequest.readyState === 4 && xmlGetRequest.status === 200) {
          renderReleases(JSON.parse(xmlGetRequest.response));
        }
      };

      xmlGetRequest.send(params);
    };

    function renderReleases(releases) {
      if (releases.length === 0) {
        searchContainer.appendChild(noSearchResults);
      } else {
        releases.forEach((release) => {
          searchContainer.appendChild(releaseItem(release));
        });
      }
    };

    function releaseItem(release) {
      let releaseContainer = document.createElement('div');
      releaseContainer.classList.add('release-item');

      let releaseThumb = document.createElement('img');
      releaseThumb.src = release.thumb;

      releaseContainer.appendChild(releaseThumb);

      let releaseDetail = document.createElement('div');
      releaseDetail.textContent = release.title;
      releaseContainer.appendChild(releaseDetail);

      return releaseContainer;
    };

    const noSearchResults = Object.assign(
      document.createElement('div'),
      { innerHTML: "No results from search" }
    );
  </script> -->
</body>
</html>